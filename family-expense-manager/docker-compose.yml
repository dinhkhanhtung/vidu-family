version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: family-expense-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: family_expense_manager
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d family_expense_manager"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: family-expense-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: family-expense-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres123@postgres:5432/family_expense_manager?schema=public
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=your-secret-key-here
      - GOOGLE_CLIENT_ID=your-google-client-id
      - GOOGLE_CLIENT_SECRET=your-google-client-secret
      - STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key
      - STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key
      - STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret
      - VNPAY_TMN_CODE=your_vnpay_tmn_code
      - VNPAY_HASH_SECRET=your_vnpay_hash_secret
      - NEXT_PUBLIC_SENTRY_DSN=your_sentry_dsn
      - SENTRY_ORG=your_sentry_org
      - SENTRY_PROJECT=your_sentry_project
      - NEXT_PUBLIC_GA_ID=your_ga_id
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    develop:
      watch:
        - action: sync
          path: ./src
          target: /app/src
        - action: rebuild
          path: package.json

  # Nginx Reverse Proxy (Optional - for production-like setup)
  nginx:
    image: nginx:alpine
    container_name: family-expense-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    profiles:
      - production

  # MailHog for email testing (Optional)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: family-expense-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"   # SMTP
      - "8025:8025"   # Web interface
    environment:
      - MH_STORAGE=maildir
    volumes:
      - mailhog_data:/maildir

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  mailhog_data:
    driver: local

networks:
  default:
    name: family-expense-network
